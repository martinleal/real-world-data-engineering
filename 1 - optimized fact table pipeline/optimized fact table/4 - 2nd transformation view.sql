CREATE OR REPLACE PROCEDURE DEMO_DB.DEMO_SCHEMA.PR_CREATE_V_TRANSFORM_2_FACT_PROCESS_RULE_STATUS()
RETURNS STRING
LANGUAGE SQL
EXECUTE AS CALLER
AS 
$$
BEGIN
CREATE OR REPLACE VIEW DEMO_DB.DEMO_SCHEMA.V_TRANSFORM_2_FACT_PROCESS_RULE_STATUS AS
WITH EVENT_TRANSFORM AS (
    SELECT
        TRANSFORM_1.ID_PROCESS_RULE,
        TRANSFORM_1.ID_DOCUMENT_PROCESS,
        TRANSFORM_1.ID_COMPOSITION,
        TRANSFORM_1.ID_COMPOSITION_TYPE,
        TRANSFORM_1.ID_PRODUCT_ZONE,
        NVL(TMP_DIM_ARTICLE_COLOR.COD_ARTICLE, -1) AS COD_ARTICLE, 
        TRANSFORM_1.ID_ARTICLE,
        TRANSFORM_1.ID_RAW,
        TRANSFORM_1.ID_COLOR,
        TRANSFORM_1.ID_DOCUMENT_TYPE,
        TRANSFORM_1.ID_SUPPLIER,
        TRANSFORM_1.ID_PROCESS_STATUS,
        TRANSFORM_1.ID_PROCESS_STATUS_REASON,
        TRANSFORM_1.ID_NEGOTIATION_ORDER,
        TRANSFORM_1.ID_ORDER,
        TRANSFORM_1.ID_BUYING_CENTER,
        TRANSFORM_1.ID_RULE_LEVEL,
        TRANSFORM_1.ID_SUSTAINABLE_MATERIAL,
        TRANSFORM_1.ID_SUSTAINABLE_MATERIAL_GROUP,
        TRANSFORM_1.DELIVERY_NUMBER,
        TRANSFORM_1.ORDER_NUMBER,
        COALESCE(TMP_DIM_ARTICLE.ID_BRAND, TMP_DIM_RAW.ID_BRAND, -1) AS ID_BRAND,
        COALESCE(TMP_DIM_ARTICLE.ID_SECTION, TMP_DIM_RAW.ID_SECTION, -1) AS ID_SECTION,
        COALESCE(TMP_DIM_ARTICLE.ID_SEASON, TMP_DIM_RAW.ID_SEASON, -1111) AS ID_SEASON,
        COALESCE(TMP_DIM_ARTICLE.ID_PRODUCT, TMP_DIM_RAW.ID_PRODUCT, -1) AS ID_PRODUCT,
        NVL(TMP_FACT_RAW_ORDER.ID_RAW_MATERIAL_ORDER, -1) AS ID_RAW_MATERIAL_ORDER,
        TRANSFORM_1.DEADLINE_DATE,
        TRANSFORM_1.DATE_CREATED,
        TRANSFORM_1.URGENT_DATE,
        TRANSFORM_1.IS_URGENT,
        TRANSFORM_1.IS_FIRST_ORDER,
        TRANSFORM_1.IS_MMPP,
        TRANSFORM_1.START_DATE,
        TRANSFORM_1.END_DATE,
        TRANSFORM_1.IS_ACTUAL,
        TRANSFORM_1.ID_SUBARTICLE,
        TRANSFORM_1.IS_SUBARTICLE,
        TRANSFORM_1.IS_MATERIAL_ANALYTICS_CANDIDATE,
        TRANSFORM_1.IS_SELF_DECLARATION,
        TRANSFORM_1.EVENT_METADATA,
        TRANSFORM_1.INGEST_DATE,
        TRANSFORM_1.ACTION,
        TRANSFORM_1.RANK_ORDER
    FROM DEMO_DB.DEMO_SCHEMA.TMP_TRANSFORM_1_FACT_PROCESS_RULE_STATUS TRANSFORM_1
    LEFT JOIN DEMO_DB.DEMO_SCHEMA.TMP_FACT_RAW_ORDER 
        ON TMP_FACT_RAW_ORDER.ID_ORDER = TRANSFORM_1.ID_ORDER
    LEFT JOIN DEMO_DB.DEMO_SCHEMA.TMP_DIM_ARTICLE_COLOR ON (
        TMP_DIM_ARTICLE_COLOR.ID_ARTICLE = TRANSFORM_1.ID_ARTICLE AND
        TMP_DIM_ARTICLE_COLOR.ID_COLOR = TRANSFORM_1.ID_COLOR)
    LEFT JOIN DEMO_DB.DEMO_SCHEMA.TMP_DIM_ARTICLE ON 
        TMP_DIM_ARTICLE.ID_ARTICLE = TRANSFORM_1.ID_ARTICLE
    LEFT JOIN DEMO_DB.DEMO_SCHEMA.TMP_DIM_RAW ON 
        TMP_DIM_RAW.ID_RAW = TRANSFORM_1.ID_RAW
)
SELECT 
    ID_PROCESS_RULE,
    ID_DOCUMENT_PROCESS,
    ID_COMPOSITION,
    ID_COMPOSITION_TYPE,
    ID_PRODUCT_ZONE,
    COD_ARTICLE, 
    ID_ARTICLE,
    ID_RAW,
    ID_COLOR,
    ID_DOCUMENT_TYPE,
    ID_SUPPLIER,
    ID_PROCESS_STATUS,
    ID_PROCESS_STATUS_REASON,
    ID_NEGOTIATION_ORDER,
    ID_ORDER,
    ID_BUYING_CENTER,
    ID_RULE_LEVEL,
    ID_SUSTAINABLE_MATERIAL,
    ID_SUSTAINABLE_MATERIAL_GROUP,
    DELIVERY_NUMBER,
    ORDER_NUMBER,
    ID_BRAND,
    ID_SECTION,
    ID_SEASON,
    ID_PRODUCT,
    ID_RAW_MATERIAL_ORDER,
    DEADLINE_DATE,
    DATE_CREATED,
    URGENT_DATE,
    IS_URGENT,
    IS_FIRST_ORDER,
    IS_MMPP,
    START_DATE,
    END_DATE,
    IS_ACTUAL,
    ID_SUBARTICLE,
    IS_SUBARTICLE,
    IS_MATERIAL_ANALYTICS_CANDIDATE,
    IS_SELF_DECLARATION,
    EVENT_METADATA,
    INGEST_DATE,
    ACTION,
    RANK_ORDER
FROM EVENT_TRANSFORM
;
END;
$$;