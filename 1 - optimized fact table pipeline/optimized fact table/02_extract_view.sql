CREATE OR REPLACE PROCEDURE DEMO_DB.DEMO_SCHEMA.PR_CREATE_V_EXTRACT_FACT_PROCESS_RULE_STATUS()
RETURNS STRING
LANGUAGE SQL
EXECUTE AS CALLER
AS 
$$
BEGIN
CREATE OR REPLACE VIEW DEMO_DB.DEMO_SCHEMA.V_EXTRACT_FACT_PROCESS_RULE_STATUS AS
SELECT 
    EVENT_NAME,
    EVENT_PK,
    EVENT_ID,
    INGEST_DATE,
    EVENT_DATE,
    NVL(
        NEXT_EVENT_DATE,
        LEAD(EVENT_DATE) OVER(PARTITION BY EVENT_PK ORDER BY EVENT_DATE, NEXT_EVENT_DATE, INGEST_DATE)
        ) AS NEXT_EVENT_DATE,
    PAYLOAD:RULE.PROCESS_RULE_id::INTEGER AS ID_PROCESS_RULE,
    PAYLOAD:RULE.PROCESS_status_id::INTEGER AS ID_PROCESS_STATUS,
    NVL(PAYLOAD:RULE.article_id::INTEGER, -1) AS ID_ARTICLE,
    NVL(PAYLOAD:RULE.raw_material_code::INTEGER, -1) AS ID_RAW,
    NVL(PAYLOAD:RULE.color_id::INTEGER, -1) AS ID_COLOR,
    NVL(PAYLOAD:RULE.document_type_code::INTEGER, -1) AS ID_DOCUMENT_TYPE,
    NVL(PAYLOAD:RULE.supplier_code::INTEGER, -1) AS ID_SUPPLIER,
    NVL(PAYLOAD:RULE.PROCESS_status_reason_id::INTEGER, -1) AS ID_PROCESS_STATUS_REASON,
    NVL(PAYLOAD:RULE.draft_order_garment_code::INTEGER, -1) AS ID_NEGOTIATION_ORDER,
    NVL(PAYLOAD:RULE.order_raw_material_code::INTEGER, -1) AS ID_ORDER,
    NVL(PAYLOAD:RULE.BUYING_CENTER_code::INTEGER, -1) AS ID_BUYING_CENTER,
    NVL(PAYLOAD:RULE.RULE_level::INTEGER, -1) AS ID_RULE_LEVEL,
    NVL(PAYLOAD:RULE.sustainable_MATERIAL_group_id::INTEGER, -1) AS ID_SUSTAINABLE_MATERIAL_GROUP,
    NVL(PAYLOAD:RULE.delivery_number::INTEGER, -1) AS DELIVERY_NUMBER,
    NVL(PAYLOAD:RULE.purchase_order_number::INTEGER, -1) AS ORDER_NUMBER,
    TRANSLATE(NVL(PAYLOAD:RULE.deadline_date,'9999-12-31'), 'TZ', ' ')::TIMESTAMP_TZ(3) AS DEADLINE_DATE,
    TRANSLATE(NVL(PAYLOAD:RULE.date_created,'9999-12-31'), 'TZ', ' ')::TIMESTAMP_TZ(3) AS DATE_CREATED,
    TRANSLATE(NVL(PAYLOAD:RULE.urgent_date,'9999-12-31'), 'TZ', ' ')::TIMESTAMP_TZ(3) AS URGENT_DATE,
    NVL(PAYLOAD:RULE.is_urgent::INTEGER, -1) AS IS_URGENT,
    NVL(PAYLOAD:RULE.is_first_purchase_order_color::INTEGER, -1) AS IS_FIRST_ORDER,
    NVL(PAYLOAD:RULE.self_declaration::BOOLEAN::INTEGER, 0) AS IS_SELF_DECLARATION,
    PAYLOAD:RULE.documentList AS DOCUMENTLIST,
    PAYLOAD:RULE.MATERIALs AS MATERIALS,
    PAYLOAD:RULE.composition_code AS COMPOSITION_CODE,
    PAYLOAD:RULE.composition_type_code AS COMPOSITION_TYPE_CODE,
    PAYLOAD:RULE.garment_zone_code AS GARMENT_ZONE_CODE,
    NVL(PAYLOAD:RULE.sustainable_MATERIAL_code::INTEGER, -1) AS SUSTAINABLE_MATERIAL_CODE,
    ROW_NUMBER() OVER(PARTITION BY EVENT_PK ORDER BY EVENT_DATE, NEXT_EVENT_DATE, INGEST_DATE) AS RANK_ORDER
FROM DEMO_DB.DEMO_SCHEMA.S_ENTITY_FACT_PROCESS_RULE_STATUS
WHERE NOT(EQUAL_NULL(EVENT_DATE,NEXT_EVENT_DATE))
;
END;
$$;
