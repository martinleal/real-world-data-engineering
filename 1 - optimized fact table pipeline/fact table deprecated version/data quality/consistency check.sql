/* 
Este check comprueba que los eventos que son borrados aparecen en la tabla de hechos FACT_PROCESS_RULE_STATUS con IS_ACTUAL = 0.
Por lo tanto, si un evento que aparece como borrado est√° con IS_ACTUAL = 1, tiene que ser KO.
*/

WITH ORIGEN AS( 
  
  SELECT 
  DISTINCT 
    payload:RULE.PROCESS_RULE_id AS ID_PROCESS_RULE, 
    EVENT_DATE
  FROM SOURCE_DEMO_DB.SOURCE_DEMO_SCHEMA.SOURCE_DEMO_TABLE
  WHERE NEXT_EVENT_DATE IS NULL and EVENT_NAME = 'RULEDelete'

), DESTINO AS(    
  
    SELECT 
      DISTINCT
      ID_PROCESS_RULE,
      START_DATE
    FROM DEMO_DB.DEMO_SCHEMA.FACT_PROCESS_RULE_STATUS
    WHERE IS_ACTUAL = 1
  
), 
REG AS(
    SELECT  
        OBJECT_CONSTRUCT(
            'ID_PROCESS_RULE', NVL(O.ID_PROCESS_RULE, D.ID_PROCESS_RULE),
			'EVENT_DATE', NVL(O.EVENT_DATE,D.START_DATE)
        ) AS DIFF,
    1 AS ORIGIN_KEYS
    FROM ORIGEN O
    INNER JOIN DESTINO D ON  
        O.ID_PROCESS_RULE =  D.ID_PROCESS_RULE
    WHERE EVENT_DATE <= CURRENT_DATE::TIMESTAMP_TZ
)
SELECT
    OBJECT_CONSTRUCT(
        'CHECK_NAME', 'CONSISTENCY__SOSTENIBILIDAD__DHWSOSTENIBILIDAD_DATA__FACT_PROCESS_RULE_STATUS__ACTUAL__DELETE',
        'ORIGIN_TABLE', ARRAY_CONSTRUCT('SOURCE_DEMO_DB.SOURCE_DEMO_SCHEMA.SOURCE_DEMO_TABLE'),
        'DESTINY_TABLE', 'DEMO_DB.DHWDEMO_DB.V_FACT_PROCESS_RULE_STATUS',
        'KEY_COLUMNS', ARRAY_CONSTRUCT('ID_PROCESS_RULE'),
        'DIFF', ARRAY_AGG(DIFF),
        'TOTAL_MISSED', SUM(ORIGIN_KEYS),
        'CHECK_TYPE', 'CONSISTENCY'
    ) AS REASON,
      CASE WHEN ARRAY_SIZE(ARRAY_AGG(DIFF)) > 0 THEN 'KO' ELSE 'OK' END AS RESULT
FROM REG;